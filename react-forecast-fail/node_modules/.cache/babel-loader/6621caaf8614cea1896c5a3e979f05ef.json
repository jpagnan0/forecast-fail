{"ast":null,"code":"import _objectSpread from \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/src/App.js\";\nimport React, { Component } from \"react\"; // import {BrowserRouter as Router, Route, Link, NavLink} from 'react-router-dom';\n// import Home from './components/Home'\n\nimport ZipCode from \"./components/ZipCode\";\nimport City from './components/City';\n\nvar OpenWeatherMapHelper = require(\"openweathermap-node\");\n\nvar APIKEY = \"ed4d2c1099d8312f09709e182a9f0e3d\"; //\n// //http://api.openweathermap.org/data/2.5/forecast?id=524901&APPID={APIKEY}\n//\n// let URL = `https://api.openweathermap.org/data/2.5/`;\n\nvar DEFAULT_QUERY = \"10128\";\nvar helper = new OpenWeatherMapHelper({\n  APPID: APIKEY,\n  units: \"imperial\"\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleCitySubmit = function () {\n      _this.props.handleCitySubmit(_this.state.zipcode);\n\n      _this.setState({\n        city: \"\"\n      });\n    };\n\n    _this.handleCityUpdate = function (e) {\n      var city = e.target.value;\n\n      _this.setState({\n        city: _this.props.city\n      });\n    };\n\n    _this.setWeatherQuery = function (q) {\n      helper.getCurrentWeatherByZipCode(q, function (err, weatherByZipCode) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            weatherByZipCode: _objectSpread({}, weatherByZipCode)\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      zipcode: \"\",\n      city: \"\",\n      weatherByZipCode: {},\n      weatherByCity: {}\n    };\n    return _this;\n  } // handleZipcodeSubmit = e => {\n  //   e.preventDefault();\n  //   // this.props.handleZipcodeSubmit(this.state.zipcode);\n  //   let weatherData = this.setWeatherQuery(this.state.zipcode);\n  //\n  //   this.setState({\n  //     zipcode: \"\"\n  //   });\n  //   console.log(this.state);\n  // };\n  //\n  // handleZipcodeUpdate = e => {\n  //   // e.preventDefault()\n  //   let zip = e.target.value;\n  //   this.setState({\n  //     zipcode: zip\n  //   });\n  // };\n  //\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.setState({\n      //   weather: this.setWeatherQuery(this.state.zipcode) ,\n      // });\n      // fetch(this.state.url)\n      // .then(res => res.json())\n      // .then(result => console.log(result))\n      // this.setWeatherUrl(this.state.zipcode)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.url)\n      // this.setWeatherUrl(this.state.zipcode)\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(City, {\n        city: this.state.city,\n        onSubmit: this.handleCitySubmit,\n        onChange: this.handleCityUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/adamsaland/Developer/flatiron/mod_four/final_project/forecast-fail/react-forecast-fail/src/App.js"],"names":["React","Component","ZipCode","City","OpenWeatherMapHelper","require","APIKEY","DEFAULT_QUERY","helper","APPID","units","App","props","handleCitySubmit","state","zipcode","setState","city","handleCityUpdate","e","target","value","setWeatherQuery","q","getCurrentWeatherByZipCode","err","weatherByZipCode","console","log","weatherByCity"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AACA,IAAMC,oBAAoB,GAAGC,OAAO,CAAC,qBAAD,CAApC;;AAEA,IAAIC,MAAM,GAAG,kCAAb,C,CACA;AACA;AACA;AACA;;AACA,IAAMC,aAAa,UAAnB;AACA,IAAMC,MAAM,GAAG,IAAIJ,oBAAJ,CAAyB;AACtCK,EAAAA,KAAK,EAAEH,MAD+B;AAEtCI,EAAAA,KAAK,EAAE;AAF+B,CAAzB,CAAf;;IAKqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UA8BnBC,gBA9BmB,GA8BA,YAAM;AACvB,YAAKD,KAAL,CAAWC,gBAAX,CAA4B,MAAKC,KAAL,CAAWC,OAAvC;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAnCkB;;AAAA,UAqCnBC,gBArCmB,GAqCA,UAAAC,CAAC,EAAI;AACtB,UAAIF,IAAI,GAAGE,CAAC,CAACC,MAAF,CAASC,KAApB;;AAEA,YAAKL,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,MAAKL,KAAL,CAAWK;AADL,OAAd;AAGD,KA3CkB;;AAAA,UA6CnBK,eA7CmB,GA6CD,UAAAC,CAAC,EAAI;AACrBf,MAAAA,MAAM,CAACgB,0BAAP,CAAkCD,CAAlC,EAAqC,UAACE,GAAD,EAAMC,gBAAN,EAA2B;AAC9D,YAAID,GAAJ,EAAS;AACPE,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,SAFD,MAEO;AACL,gBAAKT,QAAL,CAAc;AACZU,YAAAA,gBAAgB,oBAAOA,gBAAP;AADJ,WAAd;AAGD;AACF,OARD;AASD,KAvDkB;;AAGjB,UAAKZ,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXE,MAAAA,IAAI,EAAE,EAFK;AAGXS,MAAAA,gBAAgB,EAAE,EAHP;AAIXG,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAHiB;AASlB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wCA8BoB,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;;6BAIQ;AACP;AACA;AACA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWG,IADnB;AAEE,QAAA,QAAQ,EAAE,KAAKJ,gBAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKK,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAiBD;;;;EA7F8BjB,S;;SAAZU,G","sourcesContent":["import React, { Component } from \"react\";\n// import {BrowserRouter as Router, Route, Link, NavLink} from 'react-router-dom';\n// import Home from './components/Home'\nimport ZipCode from \"./components/ZipCode\";\nimport City from './components/City'\nconst OpenWeatherMapHelper = require(\"openweathermap-node\");\n\nlet APIKEY = \"ed4d2c1099d8312f09709e182a9f0e3d\";\n//\n// //http://api.openweathermap.org/data/2.5/forecast?id=524901&APPID={APIKEY}\n//\n// let URL = `https://api.openweathermap.org/data/2.5/`;\nconst DEFAULT_QUERY = `10128`;\nconst helper = new OpenWeatherMapHelper({\n  APPID: APIKEY,\n  units: \"imperial\"\n});\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      zipcode: \"\",\n      city: \"\",\n      weatherByZipCode: {},\n      weatherByCity: {}\n    };\n  }\n\n  // handleZipcodeSubmit = e => {\n  //   e.preventDefault();\n  //   // this.props.handleZipcodeSubmit(this.state.zipcode);\n  //   let weatherData = this.setWeatherQuery(this.state.zipcode);\n  //\n  //   this.setState({\n  //     zipcode: \"\"\n  //   });\n  //   console.log(this.state);\n  // };\n  //\n  // handleZipcodeUpdate = e => {\n  //   // e.preventDefault()\n  //   let zip = e.target.value;\n  //   this.setState({\n  //     zipcode: zip\n  //   });\n  // };\n  //\n  handleCitySubmit = () => {\n    this.props.handleCitySubmit(this.state.zipcode);\n    this.setState({\n      city: \"\"\n    });\n  };\n\n  handleCityUpdate = e => {\n    let city = e.target.value;\n\n    this.setState({\n      city: this.props.city\n    });\n  };\n\n  setWeatherQuery = q => {\n    helper.getCurrentWeatherByZipCode(q, (err, weatherByZipCode) => {\n      if (err) {\n        console.log(err);\n      } else {\n        this.setState({\n          weatherByZipCode: { ...weatherByZipCode }\n        });\n      }\n    });\n  };\n\n\n\n  componentDidMount() {\n    // this.setState({\n    //   weather: this.setWeatherQuery(this.state.zipcode) ,\n    // });\n    // fetch(this.state.url)\n    // .then(res => res.json())\n    // .then(result => console.log(result))\n    // this.setWeatherUrl(this.state.zipcode)\n\n  }\n\n\n\n  render() {\n    // console.log(this.state.url)\n    // this.setWeatherUrl(this.state.zipcode)\n    return (\n      <div className=\"container\">\n        {/*\n          <ZipCode\n          zipcode={this.state.zipcode}\n          // handleZipcodeUpdate={this.handleZipcodeUpdate}\n          // handleZipcodeSubmit={this.handleZipcodeSubmit}\n          />\n        */}\n        <City\n          city={this.state.city}\n          onSubmit={this.handleCitySubmit}\n          onChange={this.handleCityUpdate}\n        />\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}